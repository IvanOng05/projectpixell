generator client {
  provider = "prisma-client-js"
  output   = "generated/prisma"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model customers {
  id        String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String @db.VarChar(255)
  email     String @db.VarChar(255)
  image_url String @db.VarChar(255)
}

model testimonials {
  id               Int       @id @default(autoincrement())
  user_name        String?   @db.VarChar(100)
  testimonial_text String?
  rating           Int?
  created_at       DateTime? @default(now()) @db.Timestamp(6)
}

model invoices {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id String   @db.Uuid
  amount      Int
  status      String   @db.VarChar(255)
  date        DateTime @db.Date
}

model produk {
  id_produk   Int       @id @default(autoincrement())
  nama_produk String    @db.VarChar(255)
  harga       Decimal   @db.Decimal(12, 2)
  stock       Int       @default(0)
  kategori    String?   @db.VarChar(100)
  deskripsi   String?
  foto        String?   @db.VarChar(255)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([kategori], map: "idx_produk_kategori")
  @@index([nama_produk], map: "idx_produk_nama")
}

model revenue {
  month   String @unique @db.VarChar(4)
  revenue Int
}

model transaksi {
  id_transaksi Int       @id @default(autoincrement())
  id_produk    Int
  nama_pembeli String    @db.VarChar(255)
  total_harga  Decimal   @db.Decimal(12, 2)
  status       String    @db.VarChar(50)
  tanggal      DateTime  @db.Date
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)

  @@index([id_produk], map: "idx_transaksi_id_produk")
  @@index([status], map: "idx_transaksi_status")
  @@index([tanggal], map: "idx_transaksi_tanggal")
}

model users {
  id       String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name     String @db.VarChar(255)
  email    String @unique
  password String
}

model playing_with_neon {
  id    Int    @id @default(autoincrement())
  name  String
  value Float? @db.Real
}
